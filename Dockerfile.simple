# Smart Dockerfile for KuroPanel - Auto-configured for your codebase
# Uses PHP 8.1 for better compatibility with your CodeIgniter version
FROM php:8.1-apache

# Install system dependencies required by your codebase
RUN apt-get update && apt-get install -y \
    git \
    unzip \
    zip \
    curl \
    wget \
    # Required for intl extension
    libicu-dev \
    # Required for zip extension
    libzip-dev \
    # Required for GD extension (image processing)
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    # Required for mbstring extension
    libonig-dev \
    # Required for XML extension
    libxml2-dev \
    # Required for curl extension
    libcurl4-openssl-dev \
    # Required for MySQL
    default-mysql-client \
    # Additional utilities
    nano \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Configure and install PHP extensions based on your requirements
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-configure zip \
    && docker-php-ext-install -j$(nproc) \
    # Database extensions (required by CodeIgniter)
    pdo \
    pdo_mysql \
    mysqli \
    # String handling (required by CodeIgniter)
    mbstring \
    # XML processing (required by CodeIgniter)
    xml \
    # Archive handling (required for uploads/exports)
    zip \
    # Internationalization (required by CodeIgniter)
    intl \
    # Image processing (required for file uploads)
    gd \
    # Performance optimization
    opcache

# Configure OPCache for better performance
RUN echo "opcache.enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \
    && echo "opcache.memory_consumption=256" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \
    && echo "opcache.max_accelerated_files=20000" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \
    && echo "opcache.revalidate_freq=2" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini

# Configure PHP settings for CodeIgniter
RUN echo "upload_max_filesize = 64M" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "post_max_size = 64M" >> /usr/local/etc/php/conf.d/uploads.ini \
    && echo "memory_limit = 512M" >> /usr/local/etc/php/conf.d/memory.ini \
    && echo "max_execution_time = 300" >> /usr/local/etc/php/conf.d/performance.ini

# Install Composer
COPY --from=composer:2.6 /usr/bin/composer /usr/bin/composer

# Enable Apache modules required by CodeIgniter
RUN a2enmod rewrite headers

# Configure Apache ServerName to suppress warnings
RUN echo "ServerName localhost" >> /etc/apache2/apache2.conf

# Configure Apache VirtualHost for CodeIgniter
RUN echo '<VirtualHost *:80>\n\
    DocumentRoot /var/www/html/public\n\
    ServerName localhost\n\
    <Directory /var/www/html/public>\n\
        Options Indexes FollowSymLinks\n\
        AllowOverride All\n\
        Require all granted\n\
    </Directory>\n\
    ErrorLog ${APACHE_LOG_DIR}/error.log\n\
    CustomLog ${APACHE_LOG_DIR}/access.log combined\n\
</VirtualHost>' > /etc/apache2/sites-available/000-default.conf

# Set working directory
WORKDIR /var/www/html

# Copy composer files first for better caching
COPY composer.json composer.lock* ./

# Install CodeIgniter 4 and dependencies
RUN composer clear-cache && \
    composer install --no-dev --optimize-autoloader --no-interaction --prefer-dist || \
    composer install --no-dev --optimize-autoloader --no-interaction --ignore-platform-reqs --prefer-dist

# Copy application files
COPY . .

# Ensure vendor directory exists and install if missing
RUN if [ ! -d "vendor" ] || [ ! -f "vendor/autoload.php" ]; then \
    echo "Vendor directory missing, reinstalling..."; \
    composer install --no-dev --optimize-autoloader --no-interaction --ignore-platform-reqs --prefer-dist; \
    fi

# Set proper permissions for CodeIgniter
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html \
    && chmod -R 777 /var/www/html/writable

# Create .env file if it doesn't exist
RUN if [ ! -f .env ]; then \
    cp env .env 2>/dev/null || echo "CI_ENVIRONMENT = development" > .env; \
    fi

# Create a startup script to ensure everything is ready
RUN echo '#!/bin/bash\n\
# Ensure vendor directory exists\n\
if [ ! -d "/var/www/html/vendor" ] || [ ! -f "/var/www/html/vendor/autoload.php" ]; then\n\
    echo "Installing CodeIgniter 4 dependencies..."\n\
    cd /var/www/html\n\
    composer install --no-dev --optimize-autoloader --no-interaction --ignore-platform-reqs --prefer-dist\n\
fi\n\
\n\
# Set proper permissions\n\
chown -R www-data:www-data /var/www/html\n\
chmod -R 755 /var/www/html\n\
chmod -R 777 /var/www/html/writable\n\
\n\
# Start Apache\n\
exec apache2-foreground\n\
' > /usr/local/bin/docker-entrypoint.sh && chmod +x /usr/local/bin/docker-entrypoint.sh

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Start Apache
CMD ["/usr/local/bin/docker-entrypoint.sh"]
